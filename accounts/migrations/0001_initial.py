# Generated by Django 3.0.3 on 2020-03-20 18:36

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('username', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('user_status', models.CharField(default='active', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('user_type', models.CharField(
                    choices=[('admin', 'admin account'), ('customer', 'customer account'), ('staff', 'staff account')],
                    default='customer', max_length=32)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('location', models.CharField(choices=[('Juja', 'Juja and environs'), ('Witeithie', 'Witeithie'),
                                                       ('Kenyatta road', 'Kenyatta road')], default='Juja',
                                              max_length=32)),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group',
                                                  verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user',
                                                            to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
                'db_table': 'Users',
            },
        ),
    ]
